type AskCanceled @entity {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
}

type AskCreated @entity {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
}

type AskFilled @entity {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  buyer: Bytes! # address
  finder: Bytes! # address
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
}

type AskPriceUpdated @entity {
  id: ID!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
}

type AskEvent @entity(immutable: true) {
  id: ID!
  AskEventType: AskEventType!
  tokenContract: Bytes! # address
  tokenId: BigInt! # uint256
  ask_seller: Bytes! # address
  ask_sellerFundsRecipient: Bytes! # address
  ask_askCurrency: Bytes! # address
  ask_findersFeeBps: Int! # uint16
  ask_askPrice: BigInt! # uint256
}


enum AskEventType {
  ASK_CREATED
  ASK_CANCELED
  ASK_PRICE_UPDATED
  ASK_FILLED
}


